@{ ViewData["Title"] = "Home Page"; }

<div id="Products">
    <p>This application has the following features</p>
    <ul>
        <li>Reads the application name from the appsettigns.json and displays in the header and page title.</li>
        <li>Stores retail items in a Sqlite database, using the entity framework</li>
        <li><a href="Home/Inventory">Inventory</a> Shows the list of items in the store inventory. It uses Razor sysntax in views
            to render the list and has formatters applied to the StoreItem in the model.</li>
        <li>The rest of this page below uses client side jQuery/AJAX to fetch the store items from a seperate
            <a href="/api/StoreItems"
                target="_blank">rest API</a>. You can select the button below to show a Add new Product panel which uses an Ajax POST to the
                same api.</li>

    </ul>

    <div id="product-list">
        <a id="add-button" class="button add-image" title="button">Click to add more products</a>
        <div id="new-product-panel" class="shadow" style="display:none">
            <form id="new-product" action="/api/Storeitems">
                <p>Enter the new Product&apos;s details below:</p>

                <div class="form-group">
                    <label class="col-md-2 control-label">Name</label>
                    <div class="col-md-10">
                        <input class="form-control" name="Name" type="text" />
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-2 control-label">Price</label>
                    <div class="col-md-10">
                        <input class="form-control" name="Price" type="number" min="0.01" step="0.01" max="2500" value="99.99" />
                    </div>
                </div>
                <input type="submit" />
            </form>
        </div>

        <div id="summary">
            <div> <span id="count">0</span>Products</div>

            <ul id="product-content"></ul>
        </div>
    </div>
</div>
@section scripts {
    <script>
        // use ecmascript 6 template literals and closure for product template html
        const ProductTemplate = ({id, name, price}) => `
        <li class="product-item shadow" id="prod-${id}">
            <div class="product-name">${name}</div>
            <div class="product-price">Â£&nbsp;${price}</div>
        </li>
        `;


        // compares the date / time that 
        function ProductCompare(p1, p2) {
            return Date.parse(p1.addedDate) < Date.parse(p2.addedDate);
        }

        // refresh the list of products replacing any already there..
        function updateProducts() {
            $.getJSON('/api/Storeitems', null, function (products) {
                if (products) {
                    $('#count').text(products.length)
                } else {
                    $('#count').text("0");
                }
                $('#product-content').html(products.sort(ProductCompare).map(ProductTemplate).join(''));
            });
        }



        // When the page has loaded.
        $(document).ready(function () {
            /*
                Change the new product button's down class and hide/show new product panel
            */
            $('a.button').click(function () {
                $(this).toggleClass("down");
                $('#new-product-panel').fadeToggle();
            });


            /*
                Bind the new-product form to an ajax POST and set the success and error functions.
            */
            BindSubmitAjax('#new-product',
                function () {
                    updateProducts('product-list');
                    $('#new-product-panel').fadeToggle();
                    $('#add-button').toggleClass("down");
                },
                function (jqXHR, textStatus, errorThrown) {
                    alert(textStatus);
                }
            );

            // get the list of produces for the first time
            updateProducts();
        });

    </script>
}